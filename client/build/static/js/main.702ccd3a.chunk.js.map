{"version":3,"sources":["components/NavBar/index.js","pages/calendar.js","components/TaskList/TaskList.js","components/TaskBank/TaskBank.js","pages/taskBank.js","pages/pomodoroTimer.js","pages/userStats.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","window","location","pathname","type","name","placeholder","id","selected","value","Calendar","TaskList","task","Category","Tasks","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","map","index","key","React","Component","TaskBank","this","props","taskBank","PomodoroTimer","UserStats","App","NavBar","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uRAwEeA,MArEf,WACE,OACE,wBAAIC,UAAU,gBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAwC,MAA7BE,OAAOC,SAASC,SAAmB,kBAAoB,YAA/E,SAIF,wBAAIJ,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,aACHD,UAAwC,eAA7BE,OAAOC,SAASC,SAA4B,kBAAoB,YAF7E,cAOF,wBAAIJ,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,SACHD,UAAwC,WAA7BE,OAAOC,SAASC,SAAwB,kBAAoB,YAFzE,cAOF,wBAAIJ,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,SACHD,UAAwC,WAA7BE,OAAOC,SAASC,SAAwB,kBAAoB,YAFzE,mBAOF,wBAAIJ,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,SACHD,UAAwC,WAA7BE,OAAOC,SAASC,SAAwB,kBAAoB,YAFzE,eAOF,wBAAIJ,UAAU,YACZ,8BACE,yBAAKA,UAAU,cACX,2BAAOA,UAAU,WAAU,2CAC3B,6BACA,2BAAOA,UAAU,sBAEbK,KAAK,OACLC,KAAK,WACLC,YAAY,gBAIpB,4BAAQP,UAAU,gBAAgBQ,GAAG,oBACjC,4BAAQC,UAAQ,GAAhB,mBACA,4BAAQC,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,UAEJ,4BAAQL,KAAK,SAASL,UAAU,6BAAhC,cCjDKW,MAXf,WACE,OACE,6BACE,wCACA,mFC8BSC,E,iLA/Bb,IAAMC,EAAM,CAACC,SAAU,SAAUC,MAAO,CAAC,OAAQ,SAI/C,OAEA,yBAAKP,GAAG,aACN,yBAAKR,UAAU,QACb,yBAAKA,UAAU,cAAcQ,GAAG,cAC9B,wBAAIR,UAAU,QACZ,4BAAQA,UAAU,eAAegB,cAAY,WAAWC,cAAY,eAAeC,gBAAc,OAAOC,gBAAc,eACnHN,EAAKC,YAIZ,yBAAKN,GAAG,cAAcR,UAAU,gBAAgBoB,kBAAgB,aAAaC,cAAY,cACvF,yBAAKrB,UAAU,aACb,4BACEa,EAAKE,MAAMO,KAAI,SAACZ,EAAOa,GACtB,OAAO,wBAAIC,IAAKD,GAAQb,e,GAvBhBe,IAAMC,WC4BdC,E,iLAXF,IACDd,EAASe,KAAKC,MAAdhB,KAGR,OAAO,kBAAC,EAAD,CAAUA,KAAMA,Q,GAhBJY,IAAMC,WCMZI,MATjB,WACI,OACE,6BACC,kBAAC,EAAD,QCOUC,MAXjB,WACI,OACE,6BACE,6CACA,gFCOOC,MAXf,WACE,OACE,6BACE,0CACA,kDC4BSC,G,uLAlBX,OACE,kBAAC,IAAD,KACE,6BACE,kBAACC,EAAD,MAEE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1B,IAEjC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,SAASC,UAAWP,IACtC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAASC,UAAWN,IACtC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,SAASC,UAAWL,U,GAZhCN,cCDEY,QACW,cAA7BpC,OAAOC,SAASoC,UAEe,UAA7BrC,OAAOC,SAASoC,UAEhBrC,OAAOC,SAASoC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.702ccd3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <ul className=\"nav nav-tabs\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          to=\"/dashboard\"\r\n          className={window.location.pathname === \"/dashboard\" ? \"nav-link active\" : \"nav-link\"}\r\n        >\r\n          Dashboard\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          to=\"/tasks\"\r\n          className={window.location.pathname === \"/tasks\" ? \"nav-link active\" : \"nav-link\"}\r\n        >\r\n          Task Bank\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          to=\"/timer\"\r\n          className={window.location.pathname === \"/timer\" ? \"nav-link active\" : \"nav-link\"}\r\n        >\r\n          Pomodoro Timer\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          to=\"/stats\"\r\n          className={window.location.pathname === \"/stats\" ? \"nav-link active\" : \"nav-link\"}\r\n        >\r\n          User Stats\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n              <label className=\"taskAdd\"><h3>Input Task</h3></label>\r\n              <br></br>\r\n              <input className=\"col-12 form-control\"\r\n                  // value={props.search}\r\n                  type=\"text\"\r\n                  name=\"taskForm\"\r\n                  placeholder=\"Add a task\"\r\n                  // onChange={props.handleInputChange}\r\n              />\r\n          </div>\r\n          <select className=\"custom-select\" id=\"priorityDropDown\">\r\n              <option selected>Priority Alerts</option>\r\n              <option value=\"1\">One</option>\r\n              <option value=\"2\">Two</option>\r\n              <option value=\"3\">Three</option>\r\n          </select>\r\n          <button type=\"submit\" className=\"submitBtn btn btn-primary\">\r\n              Submit\r\n          </button>\r\n          {/* onClick={props.handleFormSubmit} */}\r\n        </form>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Calendar() {\r\n  return (\r\n    <div>\r\n      <h1>Calendar</h1>\r\n      <p>\r\n        Switch to code below once components are completed\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n\r\n\r\n\r\n\r\n\r\n// class Calendar extends React.Component {\r\n    \r\n// }\r\n\r\n// export default  Calendar;","import React from 'react'\r\nclass TaskList extends React.Component {\r\n\r\n  render () {\r\n    // const { task, remove, taskId } = this.props;\r\n  const task= {Category: \"Coding\", Tasks :[\"This\", \"That\"]}\r\n  // const task= [{Category: \"Coding\", Tasks :[\"This\", \"That\"]},{Category: \"Coding\", Tasks :[\"This\", \"That\"]}]\r\n\r\n\r\n    return (\r\n\r\n    <div id=\"accordion\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\" id=\"headingOne\">\r\n          <h5 className=\"mb-0\">\r\n            <button className=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              {task.Category}\r\n            </button>\r\n          </h5>\r\n        </div>\r\n        <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\r\n          <div className=\"card-body\">\r\n            <ul>\r\n             {task.Tasks.map((value, index) => {\r\n               return <li key={index}>{value}</li>\r\n             })}\r\n           </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> \r\n     \r\n      )\r\n  }}\r\n\r\n\r\nexport default TaskList;\r\n\r\n{/* // <td><button className=\"btn btn-danger btn-xs\" onClick={() => {inProgress(taskId)}} >In Progress</button></td> */}\r\n        // {/* <td><button className=\"btn btn-danger btn-xs\" onClick={() => add} >x</button></td>\r\n        // <td><button className=\"btn btn-danger btn-xs\" onClick={() => add} >x</button></td> */}\r\n\r\n","import React from 'react'\r\n// import axios from 'axios'\r\n// import API from \"../../../public/routes/api/taskRoutes\";\r\n\r\nimport TaskList from '../TaskList/TaskList'\r\n\r\nclass TaskBank extends React.Component {\r\n//   state = {\r\n//     taskGroup: []\r\n// }\r\n\r\n// componentDidMount() {\r\n//     API.getTasks()\r\n//         .then(savedBooks => this.setState({ savedBooks: savedBooks }))\r\n//         .catch(err => console.error(err));\r\n// }\r\n\r\n// const TaskBank = React.createClass({\r\n  render () {\r\n    const { task } = this.props;\r\n    \r\n\r\n    return <TaskList task={task}/>\r\n      \r\n}};\r\n\r\n\r\n\r\n\r\nexport default TaskBank;\r\n\r\n// return (\r\n//   <table className=\"table table-xs\">\r\n//     <thead className=\"thead-default\">\r\n//     <tr>\r\n//       <th>To-do</th>\r\n//       <th>Delete</th>\r\n//     </tr>\r\n//     </thead>\r\n//     <tbody>\r\n//     {todos\r\n//         .filter((todo)=> {\r\n//           return `${todo.task}`.indexOf(searchTerm) > -1;\r\n//         })\r\n//         .map((todo) => {\r\n//           return (\r\n//               <TodoList key={todo._id} todo={todo.task} todoId={todo._id} remove={remove}/>\r\n//           )\r\n//         })}\r\n//     </tbody>\r\n//   </table>\r\n// )\r\n\r\n\r\n\r\n{/* <div id=\"accordion\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\" id=\"headingOne\">\r\n      <h5 class=\"mb-0\">\r\n        <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          Collapsible Group Item #1\r\n        </button>\r\n      </h5>\r\n    </div>\r\n\r\n    <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\r\n      <div class=\"card-body\">\r\n        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n      </div>\r\n    </div>\r\n  </div> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const TaskBank = React.createClass({\r\n//   render () {\r\n//     // const { tasks, remove } = this.props;\r\n    \r\n\r\n//     return (\r\n//         <table className=\"table table-xs\">\r\n//           <thead className=\"thead-default\">\r\n//           <tr>\r\n//             <th>Place Holder (add table headers)</th>\r\n//           </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//           {tasks.map((task) => {\r\n//                 return (\r\n//                     <TaskList key={task._id} task={task.taskTitle} taskId={task._id} remove={remove}/>\r\n//                 )\r\n//               })}\r\n//           </tbody>\r\n//         </table>\r\n//     )\r\n//   }\r\n// });\r\n\r\n\r\n\r\n\r\n// export default TaskBank;","import React from \"react\";\r\nimport TaskBank from \"../components/TaskBank/TaskBank\"\r\n\r\nfunction taskBank() {\r\n    return (\r\n      <div>\r\n       <TaskBank/>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default taskBank;\r\n\r\n\r\n\r\n// class TaskBank extends React.Component {\r\n    \r\n// }\r\n\r\n// export default  TaskBank;","import React from \"react\";\r\n\r\nfunction PomodoroTimer() {\r\n    return (\r\n      <div>\r\n        <h1>PomodoroTimer</h1>\r\n        <p>\r\n          Switch to code below once component is finished\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default PomodoroTimer;\r\n  \r\n\r\n\r\n\r\n// class PomodoroTimer extends React.Component {\r\n    \r\n// }\r\n\r\n// export default  PomodoroTimer;","import React from \"react\";\r\n\r\nfunction UserStats() {\r\n  return (\r\n    <div>\r\n      <h1>User Stats</h1>\r\n      <p>\r\n        What have you....\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserStats;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\n// import Wrapper from \"./components/Wrapper\";\n// import TaskBank from \"./components/TaskBank\";\n// import TaskList from \"./components/TaskList\";\nimport Calendar from \"./pages/calendar\";\n// import Dashboard from \"./pages/dashboard\";\nimport taskBank from \"./pages/taskBank\";\nimport PomodoroTimer from \"./pages/pomodoroTimer\";\nimport UserStats from \"./pages/userStats\";\nimport './App.css';\n\nclass App extends Component {\n \n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar />\n            \n            <Route exact path=\"/\" component={Calendar} />\n            {/* <Route exact path=\"/dashboard\" component={Dashboard} /> */}\n            <Route exact path=\"/tasks\" component={taskBank} />\n            <Route exact path=\"/timer\" component={PomodoroTimer} />\n            <Route exact path=\"/stats\" component={UserStats} />\n\n          \n        </div>\n      </Router>\n    )\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}